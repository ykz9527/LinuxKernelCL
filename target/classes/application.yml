server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true

spring:
  application:
    name: linux-kernel-code-search
  profiles:
    active: dev
  
  # 数据源配置 - 使用MySQL数据库
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://10.176.34.96:3306/linuxDatabase?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&autoReconnect=true
    username: root
    password: 3edc@WSX!QAZ
    # 连接池配置
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 30000
      max-lifetime: 900000


# H2数据库控制台配置
h2:
  console:
    enabled: true
    path: /h2-console

# Jackson JSON配置
jackson:
  date-format: yyyy-MM-dd HH:mm:ss
  time-zone: GMT+8
  default-property-inclusion: NON_NULL

# 内核代码分析配置 ⭐ 新增
kernel:
  source:
    path: /home/fdse/ytest/codeMap/linux/repo  # 请修改为您的Linux内核源码路径
  analysis:
    max-results: 20
    timeout: 30
    cache-enabled: true

# 代理配置 ⭐ 新增 - 用于访问Wikipedia等外部网站
proxy:
  enabled: true  # 是否启用代理，默认关闭
  http:
    host: 127.0.0.1  # 代理服务器地址，如：127.0.0.1
    port: 7890       # 代理服务器端口，如：7890
  # 常见代理配置示例：
  # 1. HTTP代理（如Clash、V2ray等）
  #    host: 127.0.0.1
  #    port: 7890
  # 2. SOCKS5代理
  #    host: 127.0.0.1  
  #    port: 1080

# AI模型配置 ⭐ 新增
ai:
  # ChatGPT配置
  chatgpt:
    api-key: ${CHATGPT_API_KEY:sk-OIA8e1b5f9e53736bf8a045d17bb205403a6be38d49h7PYl}  # 通过环境变量设置API密钥
  # DeepSeek配置  
  deepseek:
    api-key: ${DEEPSEEK_API_KEY:sk-c875aefe59f5412a919c431bac6c7cea}  # 通过环境变量设置API密钥
  # 超时设置（秒）
  timeout: 30

# 代码追溯API配置 ⭐ 新增 - 用于调用外部tracker服务
tracker:
  api:
    # tracker服务基础URL，默认使用内网地址
    base-url: http://10.176.34.96:7777
    # API请求超时时间（秒）
    timeout: 30
    # 默认仓库路径
    default:
      repo: linux-stable
    # 重试配置
    retry:
      max-attempts: 3
      delay-ms: 1000

# MyBatis-Plus配置
mybatis-plus:
  configuration:
    # 开启驼峰命名映射
    map-underscore-to-camel-case: true
    # 开启SQL日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 主键类型：自增
      id-type: AUTO
      # 逻辑删除配置
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/*.xml

# API文档配置
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  info:
    title: Linux Kernel Code Search API
    description: 基于实时分析的Linux内核代码搜索服务
    version: 1.0.0
    contact:
      name: API Support
      email: support@example.com

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# 日志配置
logging:
  level:
    com.cs.api: DEBUG
    com.cs.api.service.analyzer: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev

kernel:
  source:
    path: /home/fdse/ytest/codeMap/linux/repo
  analysis:
    max-results: 10
    timeout: 15

logging:
  level:
    com.example.api: DEBUG

---
# 生产环境配置
spring:
  config:
    activate:
      on-profile: prod

kernel:
  source:
    path: /opt/linux-kernel
  analysis:
    max-results: 50
    timeout: 60

logging:
  level:
    com.example.api: INFO
    com.example.api.service.analyzer: WARN 